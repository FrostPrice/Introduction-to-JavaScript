----------------------------------------------------
The Null value means the same thing as "no value", unknow, nothing.
Ex: let age = null;
The code above states that age is unknown.
----------------------------------------------------
The meaning of Undefined is “value is not assigned”. If you put nothing on a variable, it is determined as Undefined.
Ex: let age;

    alert(age); // shows "undefined" 

Or: // change the value to undefined
age = undefined; (NOT RECOMMENDED)
----------------------------------------------------
Objects: are used to store collections of data and more complex entities.
----------------------------------------------------
The Symbol type is used to create unique identifiers for objects. 
----------------------------------------------------
The Typeof operator returns the type of the argument. It supports two forms:
	As an operator: typeof x.
	As a function: typeof(x).
----------------------------------------------------
Math: is a built-in object that provides mathematical operations.
----------------------------------------------------
The result of Typeof null is "Object".
----------------------------------------------------
The result of Typeof alert is "Function", because alert is a function.
----------------------------------------------------
Number: for numbers of any kind: integer or floating-point, integers are limited by ±253.

Bigint: is for integer numbers of arbitrary length.

String: for strings. A string may have zero or more characters, there’s no separate single-character type.

Boolean: for true/false.

Null: for unknown values – a standalone type that has a single value null.

Undefined: for unassigned values – a standalone type that has a single value undefined.

Object: for more complex data structures.

Symbol: for unique identifiers.
----------------------------------------------------
The Typeof: operator allows us to see which type is stored in a variable.

	Two forms: typeof x or typeof(x).
	Returns a string with the name of the type, like "string".
	For null returns "object" – this is an error in the language, it’s not actually an object.
----------------------------------------------------