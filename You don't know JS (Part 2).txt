----------------------------------------------------
List of falsy values:
	"" (empty string)
	0 , -0 , NaN (invalid number )
	Null , undefined
	False

List of truthy values:
	"hello"
	42
	true
	[ ] , [ 1, "2", 3 ] (arrays)
	{ } , { a: 42 } (objects)
	function foo() { .. } (functions)
----------------------------------------------------
There are four equality operators: == , === , != , and !== .
----------------------------------------------------
The ! forms are of course the symmetric "not equal" versions of their counterparts.
----------------------------------------------------
== checks for value equality with coercion allowed,
and === checks for value equality without allowing coercion.
----------------------------------------------------
Exemple of Equality:
	var a = "42";
	
	var b = 42;
	
	a == b; // true
	
	a === b; // false
----------------------------------------------------
When to use == and ===:
	If either value (aka side) in a comparison could be the true or false 	value, avoid == and use ===.
	If either value in a comparison could be of these specific values ( 0 , "" , or [] -- empty array), avoid == and use === .
	In all other cases, you're safe to use == . Not only is it safe, but in many cases it simplifies your code in a way that improves readability.
----------------------------------------------------
The != non-equality form pairs with == , and the !== form pairs with ===.
----------------------------------------------------
2 Arrays with the same content are not equal.
----------------------------------------------------
The < , > , <= , and >= operators are used for inequality.
Ex: 3 < 4
----------------------------------------------------
String values can also be compared for inequality, using typical alphabetic
rules ( "bar" < "foo" ).
----------------------------------------------------
Exemple of Inequality:
	var a = 41;

	var b = "42";

	var c = "43";

	a < b; // true

	b < c; // true
----------------------------------------------------
If there is a comparation of inequality with a word:
	var a = 42;

	var b = "foo";

	a < b; // false

	a > b; // false

	a == b; // false
----------------------------------------------------
An identifier must start with a - z , A - Z , $ , or _ . It can then contain any of those
characters plus the numerals 0 - 9 .
Ex: var 1test;
let 2test;
----------------------------------------------------
You use the var keyword to declare a variable that will belong to the current function
scope, or the global scope if at the top level outside of any function.
----------------------------------------------------